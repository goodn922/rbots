// MathFest 2009 - GNC Robot

// distances are in counts

#define DISTANCE_1  500
#define TURN_1  60

#define DISTANCE_2  500
#define TURN_2  60

#define DISTANCE_3  500
#define TURN_3  60

#define DISTANCE_4  500
#define TURN_4  60

#define DISTANCE_5  0
#define TURN_5  0

#define DISTANCE_6  0
#define TURN_6  0

#define DISTANCE_7  0
#define TURN_7  0

#define DISTANCE_8  0
#define TURN_8  0

#define DISTANCE_9  0
#define TURN_9  0

#define DISTANCE_10  0
#define TURN_10  0

// sensors
#define LTurn SENSOR_1
#define RTurn SENSOR_3

// motors
#define LEFT OUT_B
#define RIGHT OUT_C
#define RIGHT_INITIAL  5
#define LEFT_INITIAL   2
#define TIMER_LIMIT   10
#define COUNTER_LIMIT 6                        
// circumference of the wheels in (10 inches) divided by 2
#define  CIRCUMFERENCE 26
// diameter of wheel in inches
#define DIAMETER 3.25
int counter;
int distance;
int angle;
int outFlag = 1;


task main()
{

	// configure the sensors
	SetSensorType(LTurn,SENSOR_TYPE_ROTATION);
	SetSensorType(RTurn,SENSOR_TYPE_ROTATION);
	SetSensorMode(LTurn,SENSOR_MODE_ROTATION);
	SetSensorMode(RTurn,SENSOR_MODE_ROTATION);
	

	SetPower(    LEFT, 0);
  SetPower(    RIGHT, 6);
  SetOutput(   LEFT, OUT_ON);
  SetOutput(   RIGHT, OUT_ON);
  Rev(RIGHT);


	counter = 0;	

	//CreateDatalog(1000);

	// start going forward
	//Fwd(RIGHT);
	//Fwd(LEFT);

	//start watch_timer;
	//AddToDatalog(Timer(0));
	ClearSensor(LTurn);
  ClearSensor(RTurn);
	
	
	  
  // go straight 
  while(outFlag)
  {
  
    //distance = (LTurn + RTurn)*CIRCUMFERENCE;
    distance = LTurn;
	  //angle = (LTurn - RTurn)*150;
    if (distance >= 1500)
    {
      Off(RIGHT);
		  Off(LEFT);
      outFlag=0;
    }
    else
    {
      SetPower(    LEFT, 0);
      SetPower(    RIGHT, 6);
      Rev(RIGHT);
		  Fwd(LEFT);
    }
  
  
  }
  ClearSensor(LTurn);
  ClearSensor(RTurn);
  On(LEFT);
	On(RIGHT);
	outFlag = 1;
  while(outFlag)
	{
	  distance = (LTurn + RTurn)*CIRCUMFERENCE;
	  angle = (LTurn - RTurn);
	  // scaled by 30 so we dont have to dived by 40 counts per rotation
	  // 390  is ~ 10 inches
    //if (distance >= 390)     
    if(angle >= 46)
    {      
		  Off(RIGHT);
		  Off(LEFT);
		  outFlag = 0;
		}
    else
    {
      SetPower(    LEFT, 0);
      SetPower(    RIGHT, 6);
      Fwd(RIGHT);
		  Fwd(LEFT);
	  }

	}
	ClearSensor(LTurn);
  ClearSensor(RTurn);
	
	outFlag = 1;
	On(LEFT);
	On(RIGHT);
	// go straight 
  while(true)
  {
  
    //distance = (LTurn + RTurn)*CIRCUMFERENCE;
    distance = LTurn;
	  //angle = (LTurn - RTurn)*150;
    if (distance >= 380)
    {
      Off(RIGHT);
		  Off(LEFT);
      outFlag=0;
    }
    else
    {
      SetPower(    LEFT, 0);
      SetPower(    RIGHT, 6);
      Rev(RIGHT);
		  Fwd(LEFT);
    }
  
  
  }
	
}

task watch_timer()
{
	while(true)
	{
		until(Timer(0) > TIMER_LIMIT);
		PlayTone(440, 10);
		AddToDatalog(LTurn);
		AddToDatalog(RTurn);
		AddToDatalog(distance);
		ClearTimer(0);
		//ClearSensor(LTurn);
		//ClearSensor(RTurn);
		counter=0;
	}
}
		

		
// Indiana Jones Theme
task IndianaJones()
{

  while(true)
  {
  PlayTone(330,17);
  Wait(29);
  PlayTone(349,8);
  Wait(10);
  PlayTone(392,8);
  Wait(20);
  PlayTone(523,88);
  Wait(101);
  PlayTone(294,17);
  Wait(30);
  PlayTone(330,7);
  Wait(10);
  PlayTone(349,107);
  Wait(119);
  PlayTone(392,18);
  Wait(30);
  PlayTone(440,8);
  Wait(10);
  PlayTone(494,8);
  Wait(20);
  PlayTone(698,88);
  Wait(100);
  PlayTone(440,18);
  Wait(30);
  PlayTone(494,8);
  Wait(10); 
  PlayTone(523,38);
  Wait(40);
  PlayTone(587,38);
  Wait(40);
  PlayTone(659,18);  

  }

  }
