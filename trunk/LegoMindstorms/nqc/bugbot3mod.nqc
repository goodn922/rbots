// bugbot3.nqc - using multiple tasks

// sensors
#define LBUMP SENSOR_1
#define RBUMP SENSOR_3

// motors
#define LEFT OUT_A
#define RIGHT OUT_C

#define TIMER_LIMIT   50
#define COUNTER_LIMIT 6

int counter;

task main()
{

	counter = 0;	

	// configure the sensor
	SetSensor(LBUMP, SENSOR_TOUCH);
	SetSensor(RBUMP, SENSOR_TOUCH);

	// start going forward
	On(LEFT+RIGHT);

	start watch_timer;

	while(true)
	{
		check_left();
		check_right();
		check_counter();
	}
	
}

void check_left()
{
	if (LBUMP == 0)
	{
		Off(LEFT);
		Rev(RIGHT);
		until(LBUMP==1);
		On(LEFT);
		Fwd(RIGHT);
		counter += 1;		
	}
}

void check_right()
{
	if (RBUMP == 0)
	{
		Off(RIGHT);
		Rev(LEFT);
		until(RBUMP==1);
		On(RIGHT);
		Fwd(LEFT);
		counter += 1;		
	}
}

void check_counter()
{
	if (counter > COUNTER_LIMIT)
	{
		// We are in a corner
		PlaySound(SOUND_DOWN);
		counter = 0;

		// Back up, spin around , and continue
		Rev(RIGHT+LEFT);
		Wait(100);
		Fwd(RIGHT);
		Wait(300 + Random(300));
		Fwd(LEFT);
	}
}

task watch_timer()
{
	while(true)
	{
		until(Timer(0) > TIMER_LIMIT);
		PlayTone(440, 10);
		ClearTimer(0);
		counter=0;
	}
}
		

		
// Indiana Jones Theme
task IndianaJones()
{

  while(true)
  {
  PlayTone(330,17);
  Wait(29);
  PlayTone(349,8);
  Wait(10);
  PlayTone(392,8);
  Wait(20);
  PlayTone(523,88);
  Wait(101);
  PlayTone(294,17);
  Wait(30);
  PlayTone(330,7);
  Wait(10);
  PlayTone(349,107);
  Wait(119);
  PlayTone(392,18);
  Wait(30);
  PlayTone(440,8);
  Wait(10);
  PlayTone(494,8);
  Wait(20);
  PlayTone(698,88);
  Wait(100);
  PlayTone(440,18);
  Wait(30);
  PlayTone(494,8);
  Wait(10); 
  PlayTone(523,38);
  Wait(40);
  PlayTone(587,38);
  Wait(40);
  PlayTone(659,18);  

  }

  }



task watch_left()
{
	while(true)
	{
		until(LBUMP == 0);
		Off(LEFT);
		Rev(RIGHT);

		until(LBUMP == 1);
		On(LEFT);
		Fwd(RIGHT);
	}	
}

task watch_right()
{
	while(true)
	{
		until(RBUMP == 0);
		Off(RIGHT);
		Rev(LEFT);

		until(RBUMP == 1);
		On(RIGHT);
		Fwd(LEFT);
	}
}